import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);

        int N = in.nextInt();

        int[] arr = new int[N];

        for (int i = 0; i < N; i++) {
            arr[i] = in.nextInt();
        }

        Arrays.sort(arr);

        StringBuilder sb = new StringBuilder();

        int M = in.nextInt();
        for (int i = 0; i < M; i++) {

            if(binarySearch(arr, in.nextInt()) >=0){
                sb.append('1').append('\n');
            }
            else{
                sb.append('0').append('\n');
            }
        }
        System.out.println(sb);
    }

    public static int binarySearch(int[] arr, int key) {

        int lo = 0;                 // 탐색 범위의 왼쪽 끝 인덱스
        int hi = arr.length - 1;     // 탐색 범위의 오른쪽 끝 인덱스

        // lo가 hi보다 커지기 전까지 반복
        while (lo <= hi) {

            //중간 위치
            int mid = (lo + hi) / 2;

            //key 값이 중간 위치의 값보다 작을 경우
            if (key < arr[mid]) {

                hi = mid - 1;
            }
            //key 값이 중간 위치의 값보다 클 경우
            else if (key > arr[mid]) {

                lo = mid + 1;
            }
            //key 값이 중간 위치의 값과 같을 경우
            else {
                return mid;
            }

        }

        //찾고자하는 값이 없을 경우
        return -1;
    }
}
